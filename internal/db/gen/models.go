// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package gen

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type DiscordStatus string

const (
	DiscordStatusOnline  DiscordStatus = "online"
	DiscordStatusIdle    DiscordStatus = "idle"
	DiscordStatusDnd     DiscordStatus = "dnd"
	DiscordStatusOffline DiscordStatus = "offline"
)

func (e *DiscordStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = DiscordStatus(s)
	case string:
		*e = DiscordStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for DiscordStatus: %T", src)
	}
	return nil
}

type NullDiscordStatus struct {
	DiscordStatus DiscordStatus
	Valid         bool // Valid is true if DiscordStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullDiscordStatus) Scan(value interface{}) error {
	if value == nil {
		ns.DiscordStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.DiscordStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullDiscordStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.DiscordStatus), nil
}

type PresenceUpdate struct {
	Timestamp           pgtype.Timestamptz
	UserID              int64
	GuildID             int64
	ClientStatusDesktop NullDiscordStatus
	ClientStatusMobile  NullDiscordStatus
	ClientStatusWeb     NullDiscordStatus
	Activities          []byte
}
